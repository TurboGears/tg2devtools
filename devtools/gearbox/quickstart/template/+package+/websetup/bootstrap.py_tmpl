# -*- coding: utf-8 -*-
"""Setup the {{project}} application"""
from __future__ import print_function, unicode_literals

{{if sqlalchemy}}
import transaction
{{endif}}
from {{package}} import model


def bootstrap(command, conf, vars):
    """Place any commands to setup {{package}} here"""

    # <websetup.bootstrap.before.auth
    {{if auth == "sqlalchemy"}}
    from sqlalchemy.exc import IntegrityError
    try:
        transaction.begin()
        u = model.User()
        u.user_name = 'manager'
        u.display_name = 'Example manager'
        u.email_address = 'manager@somedomain.com'
        u.password = 'managepass'

        model.DBSession.add(u)

        g = model.Group()
        g.group_name = 'managers'
        g.display_name = 'Managers Group'

        g.users.append(u)

        model.DBSession.add(g)

        p = model.Permission()
        p.permission_name = 'manage'
        p.description = 'This permission gives an administrative right'
        p.groups.append(g)

        model.DBSession.add(p)

        u1 = model.User()
        u1.user_name = 'editor'
        u1.display_name = 'Example editor'
        u1.email_address = 'editor@somedomain.com'
        u1.password = 'editpass'

        model.DBSession.add(u1)
        model.DBSession.flush()
        transaction.commit()
    except IntegrityError:
        print('Warning, there was a problem adding your auth data, '
              'it may have already been added:')
        import traceback
        print(traceback.format_exc())
        transaction.abort()
        print('Continuing with bootstrapping...')
    {{elif auth == "ming"}}
    g = model.Group()
    g.group_name = 'managers'
    g.display_name = 'Managers Group'

    p = model.Permission()
    p.permission_name = 'manage'
    p.description = 'This permission gives an administrative right'
    p.groups = [g]

    u = model.User()
    u.user_name = 'manager'
    u.display_name = 'Example manager'
    u.email_address = 'manager@somedomain.com'
    u.groups = [g]
    u.password = 'managepass'

    u1 = model.User()
    u1.user_name = 'editor'
    u1.display_name = 'Example editor'
    u1.email_address = 'editor@somedomain.com'
    u1.password = 'editpass'

    model.DBSession.flush()
    model.DBSession.clear()
    {{endif}}

    # <websetup.bootstrap.after.auth>
